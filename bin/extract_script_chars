#!/usr/bin/python3
# Read characters from a table and generate Elm module
#
# Example:
# 
#   echo "
#   0061 [A] Latin Capital Letter A
#   ...
#   0410 [А] Cyrillic Capital Letter A
#   0411 [Б] Cyrillic Capital Letter Be
#   ...
#   " | extract_script_chars Cyrillic CyrillicTokens

import sys
import re

script_names_str = sys.argv[1]
module_name = sys.argv[2]

script_names = script_names_str.split(",")
script_names_escaped = map(re.escape, script_names)
script_names_group = "({})".format("|".join(script_names))
selector = re.compile(r"\[(.)\]\s+" + script_names_group)
tokens = []

for line in sys.stdin:
    found = selector.search(line)
    if found:
        tokens.append(found.group(1))

token_str = "".join(tokens)
print('module {} exposing (tokens)\ntokens = """{}"""\n'.format(module_name, token_str))